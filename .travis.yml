language: objective-c
osx_image: xcode7.1
sudo: false
env:
  global:
  - LC_CTYPE=en_US.UTF-8
  - LANG=en_US.UTF-8
<<<<<<< HEAD
  matrix:
    - DESTINATION="OS=9.1,name=iPhone 6s" TEST_SCHEME="iOS Tests" EXAMPLE_SCHEME="AFNetworking iOS Example" SDK=iphonesimulator9.1 RUN_TESTS="YES" BUILD_EXAMPLE="YES" POD_LINT="NO"
    - DESTINATION="OS=9.0,name=iPhone 6 Plus" TEST_SCHEME="iOS Tests" EXAMPLE_SCHEME="AFNetworking iOS Example" SDK=iphonesimulator9.1 RUN_TESTS="YES" BUILD_EXAMPLE="YES" POD_LINT="NO"	
    - DESTINATION="OS=8.4,name=iPhone 6" TEST_SCHEME="iOS Tests" EXAMPLE_SCHEME="AFNetworking iOS Example" SDK=iphonesimulator9.1 RUN_TESTS="YES" BUILD_EXAMPLE="NO" POD_LINT="NO"	
    - DESTINATION="OS=8.3,name=iPhone 5S" TEST_SCHEME="iOS Tests" EXAMPLE_SCHEME="AFNetworking iOS Example" SDK=iphonesimulator9.1 RUN_TESTS="YES" BUILD_EXAMPLE="NO" POD_LINT="NO"	
    - DESTINATION="OS=8.2,name=iPhone 5" TEST_SCHEME="iOS Tests" EXAMPLE_SCHEME="AFNetworking iOS Example" SDK=iphonesimulator9.1 RUN_TESTS="YES" BUILD_EXAMPLE="NO" POD_LINT="NO"
    - DESTINATION="OS=8.1,name=iPhone 4S" TEST_SCHEME="iOS Tests" EXAMPLE_SCHEME="AFNetworking iOS Example" SDK=iphonesimulator9.1 RUN_TESTS="YES" BUILD_EXAMPLE="NO" POD_LINT="YES"
# TESTS ARE CURRENTLY DISABLED FOR MAC OS X DUE TO THIS ISSUE: https://github.com/travis-ci/travis-ci/issues/4904
    - DESTINATION="arch=x86_64" TEST_SCHEME="OS X Tests" SDK=macosx10.11 EXAMPLE_SCHEME="AFNetworking Example" RUN_TESTS="NO" BUILD_EXAMPLE="YES" POD_LINT="NO"
before_install:
  - gem install cocoapods --no-rdoc --no-ri --no-document --quiet
  - gem install xcpretty --no-rdoc --no-ri --no-document --quiet
  - cd Tests && pod install && cd $TRAVIS_BUILD_DIR
script:
  - set -o pipefail
  - xcodebuild -version
  - xcodebuild -showsdks
  - if [ $RUN_TESTS == "YES" ]; then 
      xcodebuild -workspace AFNetworking.xcworkspace -scheme "$TEST_SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO test | xcpretty -c; 
      xcodebuild -workspace AFNetworking.xcworkspace -scheme "$TEST_SCHEME" -sdk "$SDK" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO test | xcpretty -c; 
    fi
  - if [ $BUILD_EXAMPLE == "YES" ]; then 
     xcodebuild -workspace AFNetworking.xcworkspace -scheme "$EXAMPLE_SCHEME" -destination "$DESTINATION" 
      -configuration Debug ONLY_ACTIVE_ARCH=NO build | xcpretty -c; 
     xcodebuild -workspace AFNetworking.xcworkspace -scheme "$EXAMPLE_SCHEME" -destination "$DESTINATION" 
      -configuration Release ONLY_ACTIVE_ARCH=NO build | xcpretty -c;
    fi
  - if [ $POD_LINT == "YES" ]; then
      pod lib lint --quick;
    fi
=======
  - FASTLANE_LANE=ci_commit
matrix:
  include:
    - osx_image: xcode7.2
      env: FASTLANE_LANE=code_coverage FASTLANE_ENV=default
    - osx_image: xcode7.2
      env: FASTLANE_ENV=ios83
    - osx_image: xcode7.2
      env: FASTLANE_ENV=ios84
    - osx_image: xcode7.2
      env: FASTLANE_ENV=ios92
    - osx_image: xcode7.2
      env: FASTLANE_ENV=tvos91	  
    - osx_image: xcode7.2
      env: FASTLANE_ENV=osx
    - osx_image: xcode7.3
      env: FASTLANE_ENV=ios93_xcode73
    - osx_image: xcode7.1
      env: FASTLANE_ENV=ios91_xcode71	  
    - osx_image: xcode7.1
      env: FASTLANE_ENV=tvos90_xcode71
    - osx_image: xcode7
      env: FASTLANE_ENV=ios81_xcode7	  
    - osx_image: xcode7
      env: FASTLANE_ENV=ios90_xcode7	  
before_install:
  - gem install fastlane --no-rdoc --no-ri --no-document --quiet
  - gem install cocoapods --no-rdoc --no-ri --no-document --quiet
  - gem install xcpretty --no-rdoc --no-ri --no-document --quiet
script:
  - set -o pipefail
  - fastlane $FASTLANE_LANE configuration:Debug --env $FASTLANE_ENV
  - fastlane $FASTLANE_LANE configuration:Release --env $FASTLANE_ENV
after_success:
  - if [ "$FASTLANE_LANE" == "code_coverage" ]; then
     bash <(curl -s https://codecov.io/bash);
    fi
after_failure:
 - cat -n ~/Library/Logs/scan/*
 - cat -n $TMPDIR/com.apple.dt.XCTest-status/Session*.log
 - cat -n ~/Library/Logs/DiagnosticReports/xctest*.crash
# deploy:
#   provider: script
#   script: fastlane complete_framework_release --env deploy
#   on:
#     tags: true
>>>>>>> AFNetworking/master
